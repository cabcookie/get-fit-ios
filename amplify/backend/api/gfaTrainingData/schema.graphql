type Training @model @aws_iam @aws_cognito_user_pools
@auth( rules: [
    { allow: owner, operations: [create, read, update, delete] }
    { allow: public, provider: iam, operations: [read] }
    { allow: private, provider: iam, operations: [create, update, read]}
    { allow: groups, groups: ["everyone"], operations: [read] }
] ) {
    id: ID!
    trainingType: TrainingType
    date: String
    trainingDetails: TrainingDetails
    executionDetails: TrainingExecution
    resultDetails: TrainingResults
    schemaVersion: Int

    runningIntervall: RunningIntervall @deprecated(reason: "use `trainingDetails` instead")
    runningWithBreaks: RunningWithBreaks @deprecated(reason: "use `trainingDetails` instead")
    name: String @deprecated(reason: "`trainingType` dictates the name for the training")
    running: Running @deprecated(reason: "use `trainingDetails` instead")
    executionId: String @deprecated(reason: "use `executionDetails` instead")
    trainingStarted: String @deprecated(reason: "use `executionDetails` instead")
    trainingFinished: String @deprecated(reason: "use `executionDetails` instead")
    resultSeconds: Int @deprecated(reason: "use `resultDetails` instead")
    resultAverageBpm: Int @deprecated(reason: "use `resultDetails` instead")
    resultCalories: Int @deprecated(reason: "use `resultDetails` instead")
}

type TrainingDetails {
    totalMinutes: Int
    intervalls: Int
    minutesPerIntervall: Int
    minutesBetweenIntervalls: Int
}

type TrainingExecution {
    executionId: String
    trainingStarted: String
    trainingFinished: String
}

type TrainingResults {
    resultSeconds: Int
    resultAverageBpm: Int
    resultCalories: Int
    resultMeters: Int
}

type RunningIntervall {
    totalMinutes: Int @deprecated(reason: "use `trainingDetails` instead")
    intervalls: Int @deprecated(reason: "use `trainingDetails` instead")
    minutesPerIntervall: Int @deprecated(reason: "use `trainingDetails` instead")
    minutesBetweenIntervalls: Int @deprecated(reason: "use `trainingDetails` instead")
    intervallBpmPercentFrom: Int @deprecated(reason: "this will be hardcoded now")
    intervallBpmPercentTo: Int @deprecated(reason: "this will be hardcoded now")
    breakBpmPercentFrom: Int @deprecated(reason: "this will be hardcoded now")
    breakBpmPercentTo: Int @deprecated(reason: "this will be hardcoded now")
    resultMeters: Int @deprecated(reason: "use `resultDetails` instead")
}

type RunningWithBreaks {
    intervalls: Int @deprecated(reason: "use `trainingDetails` instead")
    minutesPerIntervall: Int @deprecated(reason: "use `trainingDetails` instead")
    minutesBetweenIntervalls: Int @deprecated(reason: "use `trainingDetails` instead")
    runningBpmPercentFrom: Int @deprecated(reason: "this will be hardcoded now")
    runningBpmPercentTo: Int @deprecated(reason: "this will be hardcoded now")
    resultMeters: Int @deprecated(reason: "use `resultDetails` instead")
}

type Running {
    totalMinutes: Int @deprecated(reason: "use `trainingDetails` instead")
    runningBpmPercentFrom: Int @deprecated(reason: "this will be hardcoded now")
    runningBpmPercentTo: Int @deprecated(reason: "this will be hardcoded now")
    resultMeters: Int @deprecated(reason: "use `resultDetails` instead")
}

enum TrainingType {
    RUNNING_INTERVALL
    RUNNING_WITH_BREAKS
    RUNNING
    RUNNING_SLOWLY
    WALKING
    WALKING_SLOWLY
    RUNNING_INTERVALL_SLOWLY
    WALKING_INTERVALL
}

type User @model @aws_cognito_user_pools
@auth( rules: [
    { allow: owner, operations: [create, read, update] }
] ) {
    id: ID!
    username: String
    birthYear: Int
    iftttTrigger: String
    iftttKey: String
    schemaVersion: Int
}
